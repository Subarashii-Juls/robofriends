{"version":3,"sources":["component/Cardlist.js","component/SearchBox.js","component/Scroll.js","component/Errorboundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Cardlist","robots","Error","SearchBox","searchfield","textChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Errorbounday","state","hasError","error","info","this","setState","Component","App","onTextChange","event","target","value","filteredRobot","filter","robot","name","toLocaleLowerCase","includes","length","fetch","then","response","json","users","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAsBeA,EAnBE,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,cCQTC,EAXG,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,WAC7B,OACI,qBAAKC,UAAU,MAAf,SACI,uBAAOA,UAAU,gCACbC,KAAK,SACLC,YAAc,mBACdC,SAAYJ,OCEbK,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAY,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,aCqBJC,E,kDAvBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHA,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SAEP,qEAIAG,KAAKX,MAAMK,a,GAnBAQ,aCqDZC,E,kDA9CX,aAAe,IAAD,8BACV,gBAOJC,aAAe,SAACC,GACZ,EAAKJ,SAAS,CAACnB,YAAcuB,EAAMC,OAAOC,SAP1C,EAAKX,MAAS,CACVjB,OAAS,GACTG,YAAc,IAJR,E,0CAYd,WACI,MAA8BkB,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQG,EAAf,EAAeA,YACT0B,EAAgB7B,EAAO8B,QAAO,SAAAC,GAChC,OAAOA,EAAMC,KAAKC,oBAAoBC,SAAS/B,EAAY8B,wBAE/D,OAAKjC,EAAOmC,OAOJ,sBAAK9B,UAAY,KAAjB,UACI,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWD,WAAciB,KAAKI,eAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAU6B,WAV9B,oBAAIxB,UAAU,KAAd,0B,+BAmBZ,WAAqB,IAAD,OAChB+B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,EAAKlB,SAAS,CAACtB,OAASwC,W,GA3C/BjB,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8fd57684.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist = ({robots}) => {\r\n    if (true) {\r\n        throw new Error(\"dsadsadad\");\r\n    }\r\n    const cardArray = robots.map((user, i) => {\r\n        return (\r\n            <Card key = {i} \r\n            id = {robots[i].id} \r\n            name = {robots[i].name} \r\n            email ={robots[i].email} />);\r\n    })\r\n\r\n    return(\r\n        <div>\r\n           {cardArray}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, textChange}) => {\r\n    return(        \r\n        <div className='pa2'>\r\n            <input className='pa3 b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder = 'Search Robots...'\r\n                onChange = {textChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY : 'scroll', border: '1px solid black', height :'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass Errorbounday extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError : true});\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError){\r\n            return (\r\n                <h1>Oooops! There is something wrong :(</h1>\r\n            )\r\n        }\r\n\r\n        return (this.props.children)\r\n        \r\n    }\r\n}\r\n\r\nexport default Errorbounday;","import React, { Component } from \"react\";\r\nimport Cardlist from \"../component/Cardlist\";\r\nimport SearchBox from \"../component/SearchBox\";\r\nimport './App.css'\r\nimport Scroll from \"../component/Scroll\";\r\nimport Errorbounday from \"../component/Errorboundary\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state =  {\r\n            robots : [],\r\n            searchfield : '',\r\n        };\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        this.setState({searchfield : event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobot = robots.filter(robot => {\r\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\r\n        })\r\n        if (!robots.length){\r\n            return (\r\n                <h1 className='tc'>Loading...</h1>\r\n                \r\n            );\r\n        } else {\r\n            return (\r\n                <div className = 'tc'> \r\n                    <h1 className='f1'> RoboFriends </h1>\r\n                    <SearchBox textChange = {this.onTextChange} />\r\n                    <Scroll>\r\n                        <Errorbounday>\r\n                          <Cardlist robots = {filteredRobot}/>\r\n                        </Errorbounday>\r\n                    </Scroll>\r\n                </div>\r\n                \r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users =>  {this.setState({robots : users})});\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}